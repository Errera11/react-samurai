{"version":3,"file":"static/js/449.fbc8a5d8.chunk.js","mappings":"yLA2BA,WAAeA,EAAAA,EAAAA,IAAQC,EAAAA,GAAkBC,EAAAA,EAAAA,KAlBnB,SAACC,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAIH,SAACC,GACtB,MAAO,CACHC,WAAY,SAACC,GACTF,GAASG,EAAAA,EAAAA,IAAkBD,KAE/BE,WAAY,SAACC,GACTL,GAASM,EAAAA,EAAAA,IAAqBD,SAM1C,CAAuFE,EAAAA,I,mEC1BvF,GAAgB,MAAQ,4B,uECCKC,EAAAA,U,QCwC7B,EAxCsC,SAACC,GAEnC,OAAiCC,EAAAA,EAAAA,WAAS,GAA1C,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASD,EAAMI,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAgBV,OAAO,4BACDF,IACE,0BACI,kBAAMK,cAjBO,WACrBJ,GAAe,IAgBP,UAAwCC,GAAU,OAAlD,SAGPF,IACG,0BACI,kBAAOM,WAAW,EAAMC,OAlBT,WACvBN,GAAe,GACfH,EAAMU,aAAaN,IAiBJO,MAAOP,EACPQ,SAfI,SAACC,GACpBb,EAAMU,aAAaG,EAAEC,cAAcH,gBCQ3C,EAvBoB,SAACX,GAEjB,OAAIA,EAAMe,SAKF,iBAAKC,UAAWC,EAAAA,QAAhB,WACI,0BACI,gBAAKD,UAAWC,EAAAA,MAASC,IAAK,uDAElC,4BACI,gBAAKA,IAAKlB,EAAMe,QAAQI,OAAOC,SAC/B,yBAAMpB,EAAMe,QAAQM,eAExB,0BACI,SAAC,EAAD,CAAwBjB,OAAQJ,EAAMI,OAAQM,aAAcV,EAAMU,qBAbtE,0BAAK,SAAC,IAAD,O,UCRrB,EAAwB,uBCAxB,EAAuB,mBCWvB,EAVa,SAACV,GACV,OACI,0BACI,iBAAKgB,UAAWC,EAAhB,UACKjB,EAAMsB,SACP,gBAAKJ,IAAI,oG,uCCAnBK,GAAcC,EAAAA,EAAAA,GAAiB,IAUjCC,GAAcC,EAAAA,EAAAA,GAAU,CAACC,KAAM,WAAjBD,EARF,SAAC1B,GACb,OAAO,kBAAM4B,SAAU5B,EAAM6B,aAAtB,WACH,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,KAAM,cAAeC,SAAU,CAACC,EAAAA,EAAUZ,GAC/Da,YAAa,sBACpB,2CAkCR,EA5BgB,SAACpC,GACb,IAAIqC,EAAOrC,EAAMsC,MAAMC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAMlB,QAASkB,EAAElB,QAAoBmB,GAAID,EAAEC,IAAZD,EAAEC,OAYjE,OACI,iBAAKzB,UAAWC,EAAhB,WACI,4BACI,sCACA,SAACQ,EAAD,CAAaG,SAPV,SAACc,GACZ1C,EAAM2C,QAAQD,EAAKE,mBAYdP,MCjBb,GAFyBjD,E,OAAAA,KAlBH,SAACC,GACnB,MAAO,CACHiD,MAAOjD,EAAMwD,YAAYP,MACzBQ,YAAazD,EAAMwD,YAAYC,gBAId,SAACvD,GACtB,MAAO,CACHoD,QAAS,SAACC,GACNrD,GAASwD,EAAAA,EAAAA,IAAqBH,KAElCjD,WAAY,SAACqD,GACTzD,GAAS0D,EAAAA,EAAAA,IAA4BD,QAKxB5D,CAA6C8D,GCTtE,EATgB,SAAClD,GACb,OACI,iBAAKgB,UAAWC,EAAAA,EAAAA,QAAhB,WACI,SAAC,EAAD,CAAaF,QAASf,EAAMe,QAASL,aAAcV,EAAMU,aAAcN,OAAQJ,EAAMI,UACrF,SAAC,EAAD","sources":["components/Dialogs/DialogsContainer.jsx","webpack://first-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://first-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://first-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx"],"sourcesContent":["import React from \"react\";\nimport {updateMessageCreator, addMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport Profile from \"../Profile/Profile\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(addMessageCreator(newMessageBody))\n        },\n        updateText: (body) => {\n            dispatch(updateMessageCreator(body))\n        }\n\n    }\n}\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(Dialogs);","// extracted by mini-css-extract-plugin\nexport default {\"photo\":\"ProfileInfo_photo__xlmyX\"};","import React from \"react\";\n\nclass  ProfileStatus extends React.Component {\n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode() {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    diactivateEditMode() {\n        this.setState({\n            editMode: false\n        })\n        this.props.updateStatus(this.state.status);\n    };\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        })\n    };\n\n    statusInputRef = React.createRef();\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.status !== this.props.status)\n        {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    render() {\n        return <div>\n            {!this.state.editMode &&\n                <div>\n                    <span onDoubleClick={this.activateEditMode.bind(this)}>{this.state.status || '----'} </span>\n                </div>\n            }\n            {this.state.editMode &&\n                <div>\n                    <input ref={this.statusInputRef} autoFocus={true} onBlur={this.diactivateEditMode.bind(this)} value={this.state.status}\n                    onChange={this.onStatusChange}/>\n                </div>\n            }\n        </div>\n    }\n}\n\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\n\nexport const ProfileStatusWithHooks = (props) => {\n\n    let [editMode, changeEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => {\n        changeEditMode(true);\n    }\n\n    const diactivateEditMode = () => {\n        changeEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const onStatusChange = (e) => {\n        props.updateStatus(e.currentTarget.value);\n    };\n\n\n    return <div>\n        {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>{status || '----'} </span>\n            </div>\n        }\n        {editMode &&\n            <div>\n                <input autoFocus={true} onBlur={diactivateEditMode}\n                       value={status}\n                       onChange={onStatusChange}/>\n            </div>\n        }\n    </div>\n\n}\n\nexport default ProfileStatusWithHooks;","import s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/preloader/preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\n\nconst ProfileInfo = (props) => {\n\n    if(!props.profile){\n        return  <div><Preloader/></div>\n    }\n    else {\n        return (\n            <div className={s.content}>\n                <div>\n                    <img className={s.photo} src={'https://photolemur.com/uploads/blog/unnamed.jpg'}/>\n                </div>\n                <div>\n                    <img src={props.profile.photos.large}/>\n                    <div>{props.profile.fullName}</div>\n                </div>\n                <div>\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","\nimport s from './Post.module.css';\nconst Post = (props) => {\n    return (\n        <div>\n            <div className={s.item}>\n                {props.message}\n                <img src='https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg' />\n            </div>\n        </div>\n    );\n}\nexport default Post;","import s from './MyPosts.module.css';\nimport React, {createRef} from \"react\";\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validator/validators\";\nimport {Textarea} from \"../../common/FormControl/FormControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddPost = (props) => {\n    return <form onSubmit={props.handleSubmit }>\n        <Field component={Textarea} name={'newPostBody'} validate={[required, maxLength10]}\n               placeholder={'Write right here'}/>\n        <button>Post</button>\n    </form>\n}\n\nlet AddPostForm = reduxForm({form: 'addPost'})(AddPost);\n\nconst MyPosts = (props) => {\n    let post = props.posts.map(p => <Post message={p.message} key={p.id} id={p.id}/>);\n    let addPost = () => {\n        props.addPost();\n    };\n    let newPostElement = createRef();\n    let updateText = () => {\n        let text = newPostElement.current.value\n        props.updateText(text);\n    }\n    let onSubmit = (data) => {\n        props.addPost(data.newPostBody);\n    }\n    return (\n        <div className={s.posts}>\n            <div>\n                <h3>My posts</h3>\n                <AddPostForm onSubmit={onSubmit}/>\n                {/*<textarea ref={newPostElement} onChange={updateText} value={props.newPostText}/>\n                <div>\n                    <button onClick={addPost} >Submit</button>\n                </div>*/}\n            </div>\n            {post}\n        </div>\n    );\n};\n\nexport default MyPosts;","import React from \"react\";\nimport {addPostActionCreator, updatePostTextActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostBody) => {\n            dispatch(addPostActionCreator(newPostBody));\n        },\n        updateText: (text) => {\n            dispatch(updatePostTextActionCreator(text))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import './Profile.module.css';\nimport s from '../../App.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile} updateStatus={props.updateStatus} status={props.status}/>\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\nexport default Profile;"],"names":["compose","withAuthRedirect","connect","state","messagesPage","dispatch","addMessage","newMessageBody","addMessageCreator","updateText","body","updateMessageCreator","Dialogs","React","props","useState","editMode","changeEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","profile","className","s","src","photos","large","fullName","message","maxLength10","maxLengthCreator","AddPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","post","posts","map","p","id","data","addPost","newPostBody","profilePage","newPostText","addPostActionCreator","text","updatePostTextActionCreator","MyPosts"],"sourceRoot":""}